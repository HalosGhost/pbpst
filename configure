#!/usr/bin/env bash

usage () {
    printf "Usage: ./configure [options]\n\n"
    printf "Options:\n"
    printf "  --cc='COMP'       Use COMP for compiler (default: clang)\n"
    printf "  --cflags='FLAGS'  Use FLAGS for CFLAGS (cf. Tuprules.tup for defaults)\n"
    printf "  --provider='URL'  Set fallback provider (default: 'https://ptpb.pw/')\n"
    printf "  --reset-config    Reset configuration to the defaults\n"
}

update_tuprule () {
    sed -i ./Tuprules.tup -re "s/$1.*/$1 = $2/"
}

update () {
    sed -i ./src/main.h -re "s|(define $1) \"(.*)\"$|\\1 \"$2\"|"
}

default_config () {
    update FALLBACK_PROVIDER "https://ptpb.pw/"
    update_tuprule CFLAGS '-g -O3 -fPIE -pie -D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=1 -Weverything -Werror -std=c11 -fsanitize=undefined -fsanitize-trap=undefined -Wl,-z,relro,-z,now -march=native'
    update_tuprule CC 'clang'
}

show_tuprule () {
    grep --color=never "$1" ./Tuprules.tup
}

show_value () {
    printf "$1: %s\n" "$('grep' "#define $2" ./src/main.h | sed -re "s/#define $2 (.*)$/\\1/")"
}

show_config () {
    show_tuprule CFLAGS
    show_tuprule CC
    show_value 'Fallback Provider' FALLBACK_PROVIDER
}

if [[ $# == 0 ]]; then
    show_config
    exit 0
fi

for i in "$@"; do
    case "$i" in
        --cc=*)         update_tuprule CC "${i#*=}"; shift;;
        --cflags=*)     update_tuprule CFLAGS "${i#*=}"; shift;;
        --help)         usage; exit 0;;
        --provider=*)   update FALLBACK_PROVIDER "${i#*=}"; shift;;
        --reset-config) default_config; break;
    esac
done

show_config
